{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","allGoods","sort","good1","good2","length","reverse","getPreparedGoods","handleSort","field","className","type","cn","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAyBhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAA0BC,EAA1B,GAA6D,IACvDC,EAD6BN,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WAG5C,OAAQF,GACN,KAAKJ,EACHU,EAAW,YAAID,GAAOE,OACtB,MACF,KAAKV,EACHS,EAAW,YAAID,GAAOE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAClE,MAEF,QACEJ,EAAQ,YAAOD,GAQnB,OAJIH,GACFI,EAASK,UAGJL,EAMcM,CAAiBjB,EAAiB,CACrDK,YACAE,eAGF,SAASW,EAAWC,GAClB,OAAO,kBAAMb,EAAaa,IAY5B,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcJ,IAE5BsB,QAASL,EAAWjB,GALtB,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYjB,IAAcH,IAE5BqB,QAASL,EAAWhB,GALtB,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaf,IAEfgB,QArCc,WACpBf,GAAeD,IA+BX,qBAUCiB,KAAKC,UAAUhB,KAAkBe,KAAKC,UAAUzB,IAC/C,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QA1CU,WAClBjB,EAAa,IACbE,GAAc,IAqCR,sBAUJ,6BACGC,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC5GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.65271c66.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  let allGoods;\n\n  switch (sortField) {\n    case SORT_BY_ALPHABET:\n      allGoods = [...goods].sort();\n      break;\n    case SORT_BY_LENGTH:\n      allGoods = [...goods].sort((good1, good2) => good1.length - good2.length);\n      break;\n    case '':\n    default:\n      allGoods = [...goods];\n      break;\n  }\n\n  if (isReversed) {\n    allGoods.reverse();\n  }\n\n  return allGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  function handleSort(field) {\n    return () => setSortField(field);\n  }\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleReset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_BY_ALPHABET,\n          })}\n          onClick={handleSort(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n          onClick={handleSort(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {JSON.stringify(visibleGoods) !== JSON.stringify(goodsFromServer) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}