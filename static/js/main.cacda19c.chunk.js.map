{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","allGoods","sort","good1","good2","length","reverse","getPreparedGoods","className","type","cn","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAA0BC,EAA1B,GAA6D,IACvDC,EAD6BN,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WAG5C,OAAQF,GACN,IAAK,WACHM,EAAW,YAAID,GAAOE,OACtB,MACF,IAAK,SACHD,EAAW,YAAID,GAAOE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAClE,MAEF,QACEJ,EAAQ,YAAOD,GAQnB,OAJIH,GACFI,EAASK,UAGJL,EAMcM,CAAiBf,EAAiB,CACrDG,YACAE,eAGF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAA0B,aAAdf,IAEdgB,QAAS,kBAAMf,EAAa,aAL9B,iCAUA,wBACEa,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAA0B,WAAdf,IAEdgB,QAAS,kBAAMf,EAAa,WAL9B,4BAUA,wBACEa,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAab,IAEfc,QAAS,kBAAMb,GAAeD,IALhC,qBAUCe,KAAKC,UAAUd,KAAkBa,KAAKC,UAAUrB,IAC/C,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,GAAc,GACdF,EAAa,KALjB,sBAaJ,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC/FnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cacda19c.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  let allGoods;\n\n  switch (sortField) {\n    case 'alphabet':\n      allGoods = [...goods].sort();\n      break;\n    case 'length':\n      allGoods = [...goods].sort((good1, good2) => good1.length - good2.length);\n      break;\n    case '':\n    default:\n      allGoods = [...goods];\n      break;\n  }\n\n  if (isReversed) {\n    allGoods.reverse();\n  }\n\n  return allGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== 'alphabet',\n          })}\n          onClick={() => setSortField('alphabet')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== 'length',\n          })}\n          onClick={() => setSortField('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {JSON.stringify(visibleGoods) !== JSON.stringify(goodsFromServer) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortField('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}